{% extends 'base.html.twig' %}
{% block body %}
<style>
    body, html { 
        height: 100%; 
        background: black;
        color: #bbb;
    }
    a{
        text-decoration: none;
        color: inherit;
    }
    a:hover{
        cursor: pointer;
        color: yellow;
    }
    .sortButton{
        border: none;
        background: initial;
        height: 100%;
        padding: 5px;
        font-size: 16px;
        border-top: 1px solid #bbb;
        border-left: 1px solid #bbb;
        border-right: 1px solid #bbb;
        border-bottom: 3px solid #bbb;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
        border-top-right-radius: 10px;
        border-bottom-right-radius: 10px;
        color: #bbb;
    }
    .sortButton:focus{
        background-color: #003100;
    }
   
    #sortby:before{
        content: "Sort by ";
    }
    #deleter{
        text-decoration: none;
        font-size: 20px;
        font-weight: 700;
        color: red;
        padding: 2px;
    }
    #deleter:hover{
        border: solid 1px red;
        border-radius: 5px;
        color: #eee;
        background: red;
    }
   .table { 
       margin: 20px 0 20px 0;
       border-collapse: collapse; 
       } 
   .table th, td { 
      border-bottom: 1px solid .ddd; 
      width: auto; 
      text-align: center; 
      align: left; 
      padding: 4px 8px 4px 8px;
      color: #bbb;
   } 
   tr td{
        background-color: initial;
    }   
    input[type="checkbox"] {
        width: 20px !important;
    }
    tr:nth-child(even) td:nth-child(odd), 
    tr:nth-child(odd) td:nth-child(even){
        background-color: #003100;
    }

   .simpleform { 
      border: none; 
      padding:14px; 
   }  
   .simpleform label { 
      font-size:14px; 
      float:left; 
      width: 50px; 
      padding: 5px 10px 5px 10px;
      text-align:center; 
      display:block; 
   }  
   .simpleform span { 
      font-size:11px; 
      color:grey; 
      width:100px; 
      text-align:right; 
      display:block; 
   }  
   .simpleform input { 
      border: none;
      font-family:verdana; 
      font-size:14px;
      color: #bbb; 
      height:24px; 
      width:250px; 
      margin: 0 0 10px 10px; 
      background: #333;
   }  
   .simpleform textarea { 
      border:1px solid grey; 
      font-family:verdana; 
      font-size:14px; 
      color:light blue; 
      height:120px; 
      width:250px; 
      margin: 0 0 20px 10px; 
   }  
   .simpleform select { 
      margin: 0 0 20px 10px; 
   }  
   .simpleform button { 
      clear:both; 
      margin-left:250px; 
      background: grey; 
      color: #bbb; 
      border: none; 
      font-size:16px; 
   } 
   .required{
       color: #bbb;
   }
</style>  
<a href="/class/display">->Add new class<-</a>
<div id="saveForm" class="simpleform"> 
      {{ form_start(form) }} 
      {{ form_widget(form) }} 
      {{ form_end(form) }} 
</div>  
{% for message in app.flashes('notice') %}
    <div class="flash-notice">
        {{ message }}
    </div>
{% endfor %}
<table id="table1" class="table">  
   <tr>
      <th>Sort by:</th>   
      <th><input class="sortButton" type="button" onclick="sortTable(1)" value="Id"></th>
      <th><input class="sortButton" type="button" onclick="sortTable(2)" value="Name"></th>  
      <th><input class="sortButton" type="button" onclick="sortTable(3)" value="Address"></th> 
      <th>Delete from DB</th>  
   </tr>  
   {% for x in data %} 
   <tr>  
      <td style="background-color: initial;"></td>
      <td>{{ x.Id }}</td>
      <td>{{ x.Name }}</td>   
      <td>{{ x.Address }}</td> 
      <td style="text-align: center; background-color: initial;"><a id="deleter" href="{{ path('student_delete', { 'id' : x.Id }) }}">X</a></td>    
   </tr>  
   {% endfor %} 
   <br />
</table> 
<p>Student names</p>
{% for namesList in classeslistStudentIDs  %}
    {% for name in namesList  %}
        {{ name }}<br />
    {% endfor %}
{% endfor %}
<p>Classes IDs</p>
{% for id in classeslistClassesIDs  %}
        {{ id }}<br />
{% endfor %}

<script>
 function sortTable(column) {
  var table, rows, switching, i, x, y, shouldSwitch;
  table = document.getElementById("table1");
  switching = true;
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[column];
      y = rows[i + 1].getElementsByTagName("TD")[column];
      x = x.innerHTML.toLowerCase();
      y = y.innerHTML.toLowerCase();
      // Check if the two rows should switch place:
      if (TryParseInt(x, "nan")!="nan" & TryParseInt(y, "nan")!="nan") {
        x=TryParseInt(x, "nan");
        y=TryParseInt(y, "nan");
      }
        if (x > y) {
        // If so, mark as a switch and break the loop:
        shouldSwitch = true;
        break;
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
    }
  }
 }
 function TryParseInt(str,defaultValue) {
     var retValue = defaultValue;
     if(str !== null) {
         if(str.length > 0) {
             if (!isNaN(str)) {
                 retValue = parseInt(str);
             }
         }
     }
     return retValue;
 }
</script>
{% endblock %}